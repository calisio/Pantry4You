{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from 'react';\nimport { db } from \"../../../firebase\";\nimport firebase from 'firebase/compat/app';\nimport { getAuth } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddManually = function AddManually() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    item = _useState2[0],\n    setItem = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    quantity = _useState4[0],\n    setQuantity = _useState4[1];\n  var auth = getAuth();\n  var user = auth.currentUser;\n  var pantryRef = db.collection(\"users/0bWqpMhBH2lPSzVQsc1R/pantry\").doc(\"pantry\");\n  var submitHandler = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (item != '' && quantity != '') {\n        console.log(\"------------input-------------------\");\n        console.log(item);\n        console.log(quantity);\n        var quantityInt = parseInt(quantity);\n        var currentItems = yield getCurrentPantry();\n        var itemExists = false;\n        for (var i = 0; i < currentItems.length; i++) {\n          if (currentItems[i][0] == item) {\n            itemExists = true;\n            break;\n          }\n        }\n        if (itemExists) {\n          yield pantryRef.update(_defineProperty({}, item, firebase.firestore.FieldValue.increment(quantityInt)), {\n            merge: true\n          }).then(console.log(\"incremented current field\"));\n        } else {\n          yield pantryRef.update(_defineProperty({}, item, quantityInt), {\n            merge: true\n          }).then(console.log(\"added new field\"));\n        }\n      } else {\n        Alert.alert(\"Fill out both fields\");\n      }\n    });\n    return function submitHandler() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getCurrentPantry = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var pantryObj = yield pantryRef.get();\n      var curPantryList = [];\n      for (var i = 0; i < Object.keys(pantryObj.data()).length; i++) {\n        var key = Object.keys(pantryObj.data())[i];\n        var val = Object.values(pantryObj.data())[i];\n        var listEntry = [key, val];\n        curPantryList.push(listEntry);\n      }\n      return curPantryList;\n    });\n    return function getCurrentPantry() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      padding: 10\n    },\n    children: [_jsx(TextInput, {\n      clearButtonMode: \"always\",\n      style: {\n        height: 40\n      },\n      placeholder: \"Enter item here\",\n      onChangeText: function onChangeText(newItem) {\n        return setItem(newItem);\n      },\n      defaultValue: \"\",\n      id: \"item\"\n    }), _jsx(Text, {\n      style: {\n        padding: 10,\n        fontSize: 42\n      }\n    }), _jsx(TextInput, {\n      clearButtonMode: \"always\",\n      style: {\n        height: 40\n      },\n      placeholder: \"Enter quantity here\",\n      onChangeText: function onChangeText(newQuantity) {\n        return setQuantity(newQuantity);\n      },\n      defaultValue: \"\",\n      id: \"quantity\"\n    }), _jsx(Text, {\n      style: {\n        padding: 10,\n        fontSize: 42\n      }\n    }), _jsx(Button, {\n      title: \"SUBMIT\",\n      onPress: submitHandler\n    })]\n  });\n};\nexport { AddManually };","map":{"version":3,"names":["React","useState","db","firebase","getAuth","AddManually","item","setItem","quantity","setQuantity","auth","user","currentUser","pantryRef","collection","doc","submitHandler","console","log","quantityInt","parseInt","currentItems","getCurrentPantry","itemExists","i","length","update","firestore","FieldValue","increment","merge","then","Alert","alert","pantryObj","get","curPantryList","Object","keys","data","key","val","values","listEntry","push","padding","height","newItem","fontSize","newQuantity"],"sources":["/Users/brendanbhambri/Desktop/CSE437/cse437project/Pages/Pantry/PantryComponents/AddManually.js"],"sourcesContent":["import { StyleSheet, Text, View, Button, Alert, TextInput } from 'react-native';\nimport React, {useState} from 'react';\nimport { db } from '../../../firebase';\nimport firebase from 'firebase/compat/app';\nimport { getAuth } from \"firebase/auth\";\n\n\n\n// https://reactnative.dev/docs/handling-text-input\n\nconst AddManually = () => {\n    const [item, setItem] = useState('');\n    const [quantity, setQuantity] = useState('');\n\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    //TODO: active user \n    //let collectionString = \"users/\" + user + \"/pantry\";\n    //let pantryRef = db.collection(collectionString).doc(\"pantry\");\n\n    let pantryRef = db.collection(\"users/0bWqpMhBH2lPSzVQsc1R/pantry\").doc(\"pantry\");\n\n\n    const submitHandler = async() => {\n        //TODO: make sure quantity is a number\n        if(item != '' && quantity != ''){\n            console.log(\"------------input-------------------\");\n            console.log(item);\n            console.log(quantity);\n\n            let quantityInt = parseInt(quantity);\n\n            //TODO: clear TextInput\n            //setItem('');\n            //setQuantity('');\n\n            let currentItems = await getCurrentPantry();\n            let itemExists = false;\n\n            for(let i = 0; i < currentItems.length; i++){\n                if(currentItems[i][0] == item){\n                    itemExists = true;\n                    break;\n                }\n            }\n\n            if(itemExists){\n                await pantryRef.update({\n                    [item]: firebase.firestore.FieldValue.increment(quantityInt)\n                }, {merge: true})\n                .then(console.log(\"incremented current field\"));\n            }\n            else{\n                await pantryRef.update({\n                    [item]: quantityInt\n                }, {merge: true})\n                .then(console.log(\"added new field\"));\n            }\n\n            \n\n        }\n        else{\n            Alert.alert(\"Fill out both fields\");\n        }\n    }\n\n\n    const getCurrentPantry = async() => {\n        let pantryObj = await pantryRef.get();\n        let curPantryList = [];\n\n        for(let i = 0; i < Object.keys(pantryObj.data()).length; i++){\n            let key = Object.keys(pantryObj.data())[i];\n            let val = Object.values(pantryObj.data())[i];\n            let listEntry = [key, val];\n            curPantryList.push(listEntry)\n        }\n\n        return curPantryList;\n    }\n\n\n\n    return (\n        <View style={{padding: 10}}>\n        <TextInput \n            clearButtonMode='always'\n            style={{height: 40}}\n            placeholder=\"Enter item here\"\n            onChangeText={newItem => setItem(newItem)}\n            defaultValue={\"\"}\n            id=\"item\"\n        />\n        <Text style={{padding: 10, fontSize: 42}}>\n        </Text>\n        <TextInput\n            clearButtonMode='always' //this doesn't work - how to clear text input?\n            style={{height: 40}}\n            placeholder=\"Enter quantity here\"\n            onChangeText={newQuantity => setQuantity(newQuantity)}\n            defaultValue={\"\"}\n            id=\"quantity\"\n        />\n        <Text style={{padding: 10, fontSize: 42}}>\n        </Text>\n        <Button\n            title=\"SUBMIT\"\n            onPress={submitHandler}\n        />\n        </View>\n    );\n};\n\nexport {AddManually};"],"mappings":"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"},"metadata":{},"sourceType":"module"}