{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport React, { useState } from 'react';\nimport { db } from \"../../../firebase\";\nimport firebase from 'firebase/compat/app';\nimport { getAuth } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddManually = function AddManually(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    item = _useState2[0],\n    setItem = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    quantity = _useState4[0],\n    setQuantity = _useState4[1];\n  var auth = getAuth();\n  var user = auth.currentUser.uid;\n  var createPantryIfItDoesntExist = function () {\n    var _ref = _asyncToGenerator(function* (itemInput, quantityInput) {\n      db.collection('users').doc(user).get().then(function (doc) {\n        if (doc.exists) {\n          console.log(\"doc exists\");\n          db.collection('users').doc(user).collection('pantry').get().then(function (sub) {\n            if (sub.docs.length == 0) {\n              console.log(\"0 subcoll\");\n              db.collection('users').doc(user).collection('pantry').doc('pantry').set(_defineProperty({}, itemInput, quantityInput));\n            } else {\n              return;\n            }\n          });\n        }\n      });\n    });\n    return function createPantryIfItDoesntExist(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var submitHandler = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (item != '' && quantity != '') {\n        var quantityInt = parseInt(quantity);\n        yield createPantryIfItDoesntExist(item, quantityInt);\n        console.log(\"check\");\n        var currentItems = yield getCurrentPantry();\n        var itemExists = false;\n        for (var i = 0; i < currentItems.length; i++) {\n          if (currentItems[i][0] == item) {\n            itemExists = true;\n            break;\n          }\n        }\n        var collectionString = \"users/\" + user + \"/pantry\";\n        var pantryRef = db.collection(collectionString).doc(\"pantry\");\n        if (itemExists) {\n          yield pantryRef.update(_defineProperty({}, item, firebase.firestore.FieldValue.increment(quantityInt)), {\n            merge: true\n          }).then(console.log(\"incremented current field\"));\n        } else {\n          yield pantryRef.update(_defineProperty({}, item, quantityInt), {\n            merge: true\n          }).then(console.log(\"added new field\"));\n        }\n        props.updateFunction();\n      } else {\n        Alert.alert(\"Fill out both fields\");\n      }\n    });\n    return function submitHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var getCurrentPantry = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var collectionString = \"users/\" + user + \"/pantry\";\n      var pantryRef = db.collection(collectionString).doc(\"pantry\");\n      var pantryObj = yield pantryRef.get();\n      var curPantryList = [];\n      for (var i = 0; i < Object.keys(pantryObj.data()).length; i++) {\n        var key = Object.keys(pantryObj.data())[i];\n        var val = Object.values(pantryObj.data())[i];\n        var listEntry = [key, val];\n        curPantryList.push(listEntry);\n      }\n      return curPantryList;\n    });\n    return function getCurrentPantry() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var dismissKeyboard = function dismissKeyboard() {\n    Keyboard.dismiss();\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: dismissKeyboard,\n    children: _jsxs(View, {\n      style: {\n        padding: 10\n      },\n      children: [_jsx(TextInput, {\n        clearButtonMode: \"always\",\n        style: {\n          height: 40\n        },\n        placeholder: \"Enter item here\",\n        onChangeText: function onChangeText(newItem) {\n          return setItem(newItem);\n        },\n        defaultValue: \"\",\n        id: \"item\"\n      }), _jsx(Text, {\n        style: {\n          padding: 10,\n          fontSize: 42\n        }\n      }), _jsx(TextInput, {\n        clearButtonMode: \"always\",\n        style: {\n          height: 40\n        },\n        placeholder: \"Enter quantity here\",\n        onChangeText: function onChangeText(newQuantity) {\n          return setQuantity(newQuantity);\n        },\n        defaultValue: \"\",\n        id: \"quantity\"\n      }), _jsx(Text, {\n        style: {\n          padding: 10,\n          fontSize: 42\n        }\n      }), _jsx(Button, {\n        title: \"Add Item\",\n        onPress: submitHandler\n      })]\n    })\n  });\n};\nexport { AddManually };","map":{"version":3,"names":["React","useState","db","firebase","getAuth","AddManually","props","item","setItem","quantity","setQuantity","auth","user","currentUser","uid","createPantryIfItDoesntExist","itemInput","quantityInput","collection","doc","get","then","exists","console","log","sub","docs","length","set","submitHandler","quantityInt","parseInt","currentItems","getCurrentPantry","itemExists","i","collectionString","pantryRef","update","firestore","FieldValue","increment","merge","updateFunction","Alert","alert","pantryObj","curPantryList","Object","keys","data","key","val","values","listEntry","push","dismissKeyboard","Keyboard","dismiss","padding","height","newItem","fontSize","newQuantity"],"sources":["/Users/brendanbhambri/Desktop/CSE437/cse437project/Pages/Pantry/PantryComponents/AddManually.js"],"sourcesContent":["import { StyleSheet, Text, View, Button, Alert, TextInput, Keyboard, TouchableWithoutFeedback } from 'react-native';\nimport React, {useState} from 'react';\nimport { db } from '../../../firebase';\nimport firebase from 'firebase/compat/app';\nimport { getAuth } from \"firebase/auth\";\n\n// https://reactnative.dev/docs/handling-text-input\n\nconst AddManually = (props) => {\n    const [item, setItem] = useState('');\n    const [quantity, setQuantity] = useState('');\n\n    const auth = getAuth();\n    const user = auth.currentUser.uid;\n\n    const createPantryIfItDoesntExist = async(itemInput, quantityInput) => {\n        db.collection('users').doc(user).get()\n        .then(doc => {\n          if(doc.exists){\n            console.log(\"doc exists\");\n            db.collection('users').doc(user).collection('pantry').get()\n            .then(sub => {\n              if(sub.docs.length == 0){\n                console.log(\"0 subcoll\");\n                db.collection('users').doc(user).collection('pantry').doc('pantry').set({\n                  [itemInput]: quantityInput\n                })\n\n              }\n              else{\n                return;\n              }\n            });\n          }\n        });\n      }\n\n\n    const submitHandler = async() => {\n        //TODO: make sure quantity is a number\n        if(item != '' && quantity != ''){\n            let quantityInt = parseInt(quantity);\n\n            //TODO: clear TextInput\n            //setItem('');\n            //setQuantity('');\n\n            await createPantryIfItDoesntExist(item, quantityInt);\n            console.log(\"check\");\n            let currentItems = await getCurrentPantry();\n            let itemExists = false;\n\n            for(let i = 0; i < currentItems.length; i++){\n                if(currentItems[i][0] == item){\n                    itemExists = true;\n                    break;\n                }\n            }\n\n            let collectionString = \"users/\" + user + \"/pantry\";\n            let pantryRef = db.collection(collectionString).doc(\"pantry\");\n\n            if(itemExists){\n                await pantryRef.update({\n                    [item]: firebase.firestore.FieldValue.increment(quantityInt)\n                }, {merge: true})\n                .then(console.log(\"incremented current field\"));\n            }\n            else{\n                await pantryRef.update({\n                    [item]: quantityInt\n                }, {merge: true})\n                .then(console.log(\"added new field\"));\n            }\n\n            props.updateFunction();\n        }\n        else{\n            Alert.alert(\"Fill out both fields\");\n        }\n    }\n\n\n    const getCurrentPantry = async() => {\n\n        let collectionString = \"users/\" + user + \"/pantry\";\n        let pantryRef = db.collection(collectionString).doc(\"pantry\");\n\n        let pantryObj = await pantryRef.get();\n        let curPantryList = [];\n\n        for(let i = 0; i < Object.keys(pantryObj.data()).length; i++){\n            let key = Object.keys(pantryObj.data())[i];\n            let val = Object.values(pantryObj.data())[i];\n            let listEntry = [key, val];\n            curPantryList.push(listEntry)\n        }\n\n        return curPantryList;\n    }\n\n\n    const dismissKeyboard = () => {\n        Keyboard.dismiss();\n    }\n\n    return (\n        <TouchableWithoutFeedback onPress={dismissKeyboard}>\n            <View style={{padding: 10}}>\n                <TextInput \n                    clearButtonMode='always'\n                    style={{height: 40}}\n                    placeholder=\"Enter item here\"\n                    onChangeText={newItem => setItem(newItem)}\n                    defaultValue={\"\"}\n                    id=\"item\"\n                />\n                <Text style={{padding: 10, fontSize: 42}}>\n                </Text>\n                <TextInput\n                    clearButtonMode='always' //this doesn't work - how to clear text input?\n                    style={{height: 40}}\n                    placeholder=\"Enter quantity here\"\n                    onChangeText={newQuantity => setQuantity(newQuantity)}\n                    defaultValue={\"\"}\n                    id=\"quantity\"\n                />\n                <Text style={{padding: 10, fontSize: 42}}>\n                </Text>\n                <Button\n                    title=\"Add Item\"\n                    onPress={submitHandler}\n                />\n            </View>\n        </TouchableWithoutFeedback>\n    );\n};\n\nexport {AddManually};"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,EAAE;AACX,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,OAAO,QAAQ,eAAe;AAAC;AAAA;AAIxC,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAK;EAC3B,gBAAwBL,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BM,IAAI;IAAEC,OAAO;EACpB,iBAAgCP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCQ,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,IAAI,GAAGP,OAAO,EAAE;EACtB,IAAMQ,IAAI,GAAGD,IAAI,CAACE,WAAW,CAACC,GAAG;EAEjC,IAAMC,2BAA2B;IAAA,6BAAG,WAAMC,SAAS,EAAEC,aAAa,EAAK;MACnEf,EAAE,CAACgB,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACP,IAAI,CAAC,CAACQ,GAAG,EAAE,CACrCC,IAAI,CAAC,UAAAF,GAAG,EAAI;QACX,IAAGA,GAAG,CAACG,MAAM,EAAC;UACZC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;UACzBtB,EAAE,CAACgB,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACP,IAAI,CAAC,CAACM,UAAU,CAAC,QAAQ,CAAC,CAACE,GAAG,EAAE,CAC1DC,IAAI,CAAC,UAAAI,GAAG,EAAI;YACX,IAAGA,GAAG,CAACC,IAAI,CAACC,MAAM,IAAI,CAAC,EAAC;cACtBJ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;cACxBtB,EAAE,CAACgB,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACP,IAAI,CAAC,CAACM,UAAU,CAAC,QAAQ,CAAC,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACS,GAAG,qBACpEZ,SAAS,EAAGC,aAAa,EAC1B;YAEJ,CAAC,MACG;cACF;YACF;UACF,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,gBApBGF,2BAA2B;MAAA;IAAA;EAAA,GAoB9B;EAGH,IAAMc,aAAa;IAAA,8BAAG,aAAW;MAE7B,IAAGtB,IAAI,IAAI,EAAE,IAAIE,QAAQ,IAAI,EAAE,EAAC;QAC5B,IAAIqB,WAAW,GAAGC,QAAQ,CAACtB,QAAQ,CAAC;QAMpC,MAAMM,2BAA2B,CAACR,IAAI,EAAEuB,WAAW,CAAC;QACpDP,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpB,IAAIQ,YAAY,SAASC,gBAAgB,EAAE;QAC3C,IAAIC,UAAU,GAAG,KAAK;QAEtB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,YAAY,CAACL,MAAM,EAAEQ,CAAC,EAAE,EAAC;UACxC,IAAGH,YAAY,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI5B,IAAI,EAAC;YAC1B2B,UAAU,GAAG,IAAI;YACjB;UACJ;QACJ;QAEA,IAAIE,gBAAgB,GAAG,QAAQ,GAAGxB,IAAI,GAAG,SAAS;QAClD,IAAIyB,SAAS,GAAGnC,EAAE,CAACgB,UAAU,CAACkB,gBAAgB,CAAC,CAACjB,GAAG,CAAC,QAAQ,CAAC;QAE7D,IAAGe,UAAU,EAAC;UACV,MAAMG,SAAS,CAACC,MAAM,qBACjB/B,IAAI,EAAGJ,QAAQ,CAACoC,SAAS,CAACC,UAAU,CAACC,SAAS,CAACX,WAAW,CAAC,GAC7D;YAACY,KAAK,EAAE;UAAI,CAAC,CAAC,CAChBrB,IAAI,CAACE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACnD,CAAC,MACG;UACA,MAAMa,SAAS,CAACC,MAAM,qBACjB/B,IAAI,EAAGuB,WAAW,GACpB;YAACY,KAAK,EAAE;UAAI,CAAC,CAAC,CAChBrB,IAAI,CAACE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACzC;QAEAlB,KAAK,CAACqC,cAAc,EAAE;MAC1B,CAAC,MACG;QACAC,KAAK,CAACC,KAAK,CAAC,sBAAsB,CAAC;MACvC;IACJ,CAAC;IAAA,gBA1CKhB,aAAa;MAAA;IAAA;EAAA,GA0ClB;EAGD,IAAMI,gBAAgB;IAAA,8BAAG,aAAW;MAEhC,IAAIG,gBAAgB,GAAG,QAAQ,GAAGxB,IAAI,GAAG,SAAS;MAClD,IAAIyB,SAAS,GAAGnC,EAAE,CAACgB,UAAU,CAACkB,gBAAgB,CAAC,CAACjB,GAAG,CAAC,QAAQ,CAAC;MAE7D,IAAI2B,SAAS,SAAST,SAAS,CAACjB,GAAG,EAAE;MACrC,IAAI2B,aAAa,GAAG,EAAE;MAEtB,KAAI,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,MAAM,CAACC,IAAI,CAACH,SAAS,CAACI,IAAI,EAAE,CAAC,CAACvB,MAAM,EAAEQ,CAAC,EAAE,EAAC;QACzD,IAAIgB,GAAG,GAAGH,MAAM,CAACC,IAAI,CAACH,SAAS,CAACI,IAAI,EAAE,CAAC,CAACf,CAAC,CAAC;QAC1C,IAAIiB,GAAG,GAAGJ,MAAM,CAACK,MAAM,CAACP,SAAS,CAACI,IAAI,EAAE,CAAC,CAACf,CAAC,CAAC;QAC5C,IAAImB,SAAS,GAAG,CAACH,GAAG,EAAEC,GAAG,CAAC;QAC1BL,aAAa,CAACQ,IAAI,CAACD,SAAS,CAAC;MACjC;MAEA,OAAOP,aAAa;IACxB,CAAC;IAAA,gBAhBKd,gBAAgB;MAAA;IAAA;EAAA,GAgBrB;EAGD,IAAMuB,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC1BC,QAAQ,CAACC,OAAO,EAAE;EACtB,CAAC;EAED,OACI,KAAC,wBAAwB;IAAC,OAAO,EAAEF,eAAgB;IAAA,UAC/C,MAAC,IAAI;MAAC,KAAK,EAAE;QAACG,OAAO,EAAE;MAAE,CAAE;MAAA,WACvB,KAAC,SAAS;QACN,eAAe,EAAC,QAAQ;QACxB,KAAK,EAAE;UAACC,MAAM,EAAE;QAAE,CAAE;QACpB,WAAW,EAAC,iBAAiB;QAC7B,YAAY,EAAE,sBAAAC,OAAO;UAAA,OAAIrD,OAAO,CAACqD,OAAO,CAAC;QAAA,CAAC;QAC1C,YAAY,EAAE,EAAG;QACjB,EAAE,EAAC;MAAM,EACX,EACF,KAAC,IAAI;QAAC,KAAK,EAAE;UAACF,OAAO,EAAE,EAAE;UAAEG,QAAQ,EAAE;QAAE;MAAE,EAClC,EACP,KAAC,SAAS;QACN,eAAe,EAAC,QAAQ;QACxB,KAAK,EAAE;UAACF,MAAM,EAAE;QAAE,CAAE;QACpB,WAAW,EAAC,qBAAqB;QACjC,YAAY,EAAE,sBAAAG,WAAW;UAAA,OAAIrD,WAAW,CAACqD,WAAW,CAAC;QAAA,CAAC;QACtD,YAAY,EAAE,EAAG;QACjB,EAAE,EAAC;MAAU,EACf,EACF,KAAC,IAAI;QAAC,KAAK,EAAE;UAACJ,OAAO,EAAE,EAAE;UAAEG,QAAQ,EAAE;QAAE;MAAE,EAClC,EACP,KAAC,MAAM;QACH,KAAK,EAAC,UAAU;QAChB,OAAO,EAAEjC;MAAc,EACzB;IAAA;EACC,EACgB;AAEnC,CAAC;AAED,SAAQxB,WAAW"},"metadata":{},"sourceType":"module"}