{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Search = function Search() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchQuery = _useState2[0],\n    setSearchQuery = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    matchingUsers = _useState4[0],\n    setMatchingUsers = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errorMessage = _useState6[0],\n    setErrorMessage = _useState6[1];\n  var handleSearch = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!searchQuery || !searchQuery.includes('@')) {\n        setErrorMessage('Sorry, please provide a valid email');\n        setMatchingUsers([]);\n        return;\n      }\n      try {\n        var auth = firebase.auth();\n        var _yield$auth$listUsers = yield auth.listUsers(),\n          users = _yield$auth$listUsers.users;\n        var filteredUsers = users.filter(function (user) {\n          return user.email.toLowerCase().includes(searchQuery.toLowerCase());\n        });\n        if (filteredUsers.length) {\n          setMatchingUsers(filteredUsers);\n          setErrorMessage('');\n        } else {\n          setMatchingUsers([]);\n          setErrorMessage('Sorry, there are no users with that email');\n        }\n      } catch (error) {\n        console.error(error);\n        setMatchingUsers([]);\n        setErrorMessage('Sorry, there was an error searching for users');\n      }\n    });\n    return function handleSearch() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(\"div\", {\n    children: [_jsx(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: function onChange(event) {\n        return setSearchQuery(event.target.value);\n      },\n      placeholder: \"Search for users by email\"\n    }), _jsx(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }), errorMessage && _jsx(\"p\", {\n      children: errorMessage\n    }), _jsx(\"ul\", {\n      children: matchingUsers.map(function (user) {\n        return _jsx(\"li\", {\n          children: user.email\n        }, user.uid);\n      })\n    })]\n  });\n};\nexport { Search };","map":{"version":3,"names":["React","useState","firebase","Search","searchQuery","setSearchQuery","matchingUsers","setMatchingUsers","errorMessage","setErrorMessage","handleSearch","includes","auth","listUsers","users","filteredUsers","filter","user","email","toLowerCase","length","error","console","event","target","value","map","uid"],"sources":["/Users/brendanbhambri/Desktop/CSE437/cse437project/Pages/Search/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst Search = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [matchingUsers, setMatchingUsers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSearch = async () => {\n    if (!searchQuery || !searchQuery.includes('@')) {\n      setErrorMessage('Sorry, please provide a valid email');\n      setMatchingUsers([]);\n      return;\n    }\n\n    try {\n      const auth = firebase.auth();\n      const { users } = await auth.listUsers();\n\n      const filteredUsers = users.filter((user) =>\n        user.email.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n\n      if (filteredUsers.length) {\n        setMatchingUsers(filteredUsers);\n        setErrorMessage('');\n      } else {\n        setMatchingUsers([]);\n        setErrorMessage('Sorry, there are no users with that email');\n      }\n    } catch (error) {\n      console.error(error);\n      setMatchingUsers([]);\n      setErrorMessage('Sorry, there was an error searching for users');\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchQuery}\n        onChange={(event) => setSearchQuery(event.target.value)}\n        placeholder=\"Search for users by email\"\n      />\n      <button onClick={handleSearch}>Search</button>\n      {errorMessage && <p>{errorMessage}</p>}\n      <ul>\n        {matchingUsers.map((user) => (\n          <li key={user.uid}>{user.email}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport {Search};\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAO,eAAe;AAAC;AAAA;AAEvB,IAAMC,MAAM,GAAG,SAATA,MAAM,GAAS;EACnB,gBAAsCF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CG,WAAW;IAAEC,cAAc;EAClC,iBAA0CJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/CK,aAAa;IAAEC,gBAAgB;EACtC,iBAAwCN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7CO,YAAY;IAAEC,eAAe;EAEpC,IAAMC,YAAY;IAAA,6BAAG,aAAY;MAC/B,IAAI,CAACN,WAAW,IAAI,CAACA,WAAW,CAACO,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC9CF,eAAe,CAAC,qCAAqC,CAAC;QACtDF,gBAAgB,CAAC,EAAE,CAAC;QACpB;MACF;MAEA,IAAI;QACF,IAAMK,IAAI,GAAGV,QAAQ,CAACU,IAAI,EAAE;QAC5B,kCAAwBA,IAAI,CAACC,SAAS,EAAE;UAAhCC,KAAK,yBAALA,KAAK;QAEb,IAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC,UAACC,IAAI;UAAA,OACtCA,IAAI,CAACC,KAAK,CAACC,WAAW,EAAE,CAACR,QAAQ,CAACP,WAAW,CAACe,WAAW,EAAE,CAAC;QAAA,EAC7D;QAED,IAAIJ,aAAa,CAACK,MAAM,EAAE;UACxBb,gBAAgB,CAACQ,aAAa,CAAC;UAC/BN,eAAe,CAAC,EAAE,CAAC;QACrB,CAAC,MAAM;UACLF,gBAAgB,CAAC,EAAE,CAAC;UACpBE,eAAe,CAAC,2CAA2C,CAAC;QAC9D;MACF,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBd,gBAAgB,CAAC,EAAE,CAAC;QACpBE,eAAe,CAAC,+CAA+C,CAAC;MAClE;IACF,CAAC;IAAA,gBA3BKC,YAAY;MAAA;IAAA;EAAA,GA2BjB;EAED,OACE;IAAA,WACE;MACE,IAAI,EAAC,MAAM;MACX,KAAK,EAAEN,WAAY;MACnB,QAAQ,EAAE,kBAACmB,KAAK;QAAA,OAAKlB,cAAc,CAACkB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA,CAAC;MACxD,WAAW,EAAC;IAA2B,EACvC,EACF;MAAQ,OAAO,EAAEf,YAAa;MAAA,UAAC;IAAM,EAAS,EAC7CF,YAAY,IAAI;MAAA,UAAIA;IAAY,EAAK,EACtC;MAAA,UACGF,aAAa,CAACoB,GAAG,CAAC,UAACT,IAAI;QAAA,OACtB;UAAA,UAAoBA,IAAI,CAACC;QAAK,GAArBD,IAAI,CAACU,GAAG,CAAmB;MAAA,CACrC;IAAC,EACC;EAAA,EACD;AAEV,CAAC;AAED,SAAQxB,MAAM"},"metadata":{},"sourceType":"module"}