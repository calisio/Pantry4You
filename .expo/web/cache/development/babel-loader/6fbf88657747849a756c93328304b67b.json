{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { db } from \"../../firebase\";\nvar GetRecipesIds = function () {\n  var _ref = _asyncToGenerator(function* (uid) {\n    var collectionString = \"users/\" + uid + \"/pantry\";\n    var pantryRef = db.collection(collectionString).doc(\"pantry\");\n    var pantryObj = yield pantryRef.get();\n    var pantryList = [];\n    for (var i = 0; i < Object.keys(pantryObj.data()).length; i++) {\n      if (Object.values(pantryObj.data())[i] < 1) {\n        continue;\n      }\n      var key = Object.keys(pantryObj.data())[i];\n      pantryList.push(key);\n    }\n    function fetchRecipesIds(_x2) {\n      return _fetchRecipesIds.apply(this, arguments);\n    }\n    function _fetchRecipesIds() {\n      _fetchRecipesIds = _asyncToGenerator(function* (ingredients) {\n        var recipeList = [];\n        var query = \"\";\n        for (var _i = 0; _i < ingredients.length; _i++) {\n          if (_i == 0) {\n            query += ingredients[_i];\n          } else {\n            query += \",+\" + ingredients[_i];\n          }\n        }\n        try {\n          var recipes = yield fetch('https://api.spoonacular.com/recipes/findByIngredients?ingredients=' + query + '&number=5&ranking=2', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'x-api-key': '2b747b3902c148758955f81fcac5bb4f'\n            }\n          });\n          var data = yield recipes.json();\n          for (var _i2 = 0; _i2 < data.length; _i2++) {\n            recipeList.push(data[_i2]['id']);\n          }\n          return recipeList;\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      return _fetchRecipesIds.apply(this, arguments);\n    }\n    return fetchRecipesIds(pantryList);\n  });\n  return function GetRecipesIds(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default GetRecipesIds;","map":{"version":3,"names":["db","GetRecipesIds","uid","collectionString","pantryRef","collection","doc","pantryObj","get","pantryList","i","Object","keys","data","length","values","key","push","fetchRecipesIds","ingredients","recipeList","query","recipes","fetch","method","headers","json","error","console","log"],"sources":["/Users/davidmutascio/Desktop/Senior/437/cse437project/Pages/Home/GetRecipesIds.js"],"sourcesContent":["import { db } from '../../firebase';\n\nconst GetRecipesIds = async function(uid){\n    //get list of current ingredients\n    let collectionString = \"users/\" + uid + \"/pantry\";\n    let pantryRef = db.collection(collectionString).doc(\"pantry\");\n    let pantryObj = await pantryRef.get();\n    let pantryList = [];\n    for(let i = 0; i < Object.keys(pantryObj.data()).length; i++){\n        if (Object.values(pantryObj.data())[i]<1){\n            continue;\n        }\n        let key = Object.keys(pantryObj.data())[i];\n        pantryList.push(key)\n    }\n    //create query with list of ingredients\n    async function fetchRecipesIds(ingredients){\n        let recipeList = [];\n        let query = \"\"\n        for (let i=0; i<ingredients.length; i++){\n            if (i==0){\n                query+=ingredients[i];\n            }\n            else{\n                query+=(\",+\" + ingredients[i]);\n            }\n        }\n        try {\n            const recipes = await fetch('https://api.spoonacular.com/recipes/findByIngredients?ingredients='+query+'&number=5&ranking=2', {\n                method: 'GET',\n                headers: {\n                'Content-Type': 'application/json',\n                'x-api-key': '2b747b3902c148758955f81fcac5bb4f'\n                }\n            });\n            const data = await recipes.json();\n            for (let i = 0; i<data.length; i++){\n                recipeList.push(data[i]['id'])\n            }\n            return recipeList;\n          } catch (error) {\n            console.log(error);\n          }\n        }\n    return fetchRecipesIds(pantryList);\n    //return recipes;\n}\n\nexport default GetRecipesIds;"],"mappings":";AAAA,SAASA,EAAE;AAEX,IAAMC,aAAa;EAAA,6BAAG,WAAeC,GAAG,EAAC;IAErC,IAAIC,gBAAgB,GAAG,QAAQ,GAAGD,GAAG,GAAG,SAAS;IACjD,IAAIE,SAAS,GAAGJ,EAAE,CAACK,UAAU,CAACF,gBAAgB,CAAC,CAACG,GAAG,CAAC,QAAQ,CAAC;IAC7D,IAAIC,SAAS,SAASH,SAAS,CAACI,GAAG,EAAE;IACrC,IAAIC,UAAU,GAAG,EAAE;IACnB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACL,SAAS,CAACM,IAAI,EAAE,CAAC,CAACC,MAAM,EAAEJ,CAAC,EAAE,EAAC;MACzD,IAAIC,MAAM,CAACI,MAAM,CAACR,SAAS,CAACM,IAAI,EAAE,CAAC,CAACH,CAAC,CAAC,GAAC,CAAC,EAAC;QACrC;MACJ;MACA,IAAIM,GAAG,GAAGL,MAAM,CAACC,IAAI,CAACL,SAAS,CAACM,IAAI,EAAE,CAAC,CAACH,CAAC,CAAC;MAC1CD,UAAU,CAACQ,IAAI,CAACD,GAAG,CAAC;IACxB;IAAC,SAEcE,eAAe;MAAA;IAAA;IAAA;MAAA,qCAA9B,WAA+BC,WAAW,EAAC;QACvC,IAAIC,UAAU,GAAG,EAAE;QACnB,IAAIC,KAAK,GAAG,EAAE;QACd,KAAK,IAAIX,EAAC,GAAC,CAAC,EAAEA,EAAC,GAACS,WAAW,CAACL,MAAM,EAAEJ,EAAC,EAAE,EAAC;UACpC,IAAIA,EAAC,IAAE,CAAC,EAAC;YACLW,KAAK,IAAEF,WAAW,CAACT,EAAC,CAAC;UACzB,CAAC,MACG;YACAW,KAAK,IAAG,IAAI,GAAGF,WAAW,CAACT,EAAC,CAAE;UAClC;QACJ;QACA,IAAI;UACA,IAAMY,OAAO,SAASC,KAAK,CAAC,oEAAoE,GAACF,KAAK,GAAC,qBAAqB,EAAE;YAC1HG,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACT,cAAc,EAAE,kBAAkB;cAClC,WAAW,EAAE;YACb;UACJ,CAAC,CAAC;UACF,IAAMZ,IAAI,SAASS,OAAO,CAACI,IAAI,EAAE;UACjC,KAAK,IAAIhB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAACG,IAAI,CAACC,MAAM,EAAEJ,GAAC,EAAE,EAAC;YAC/BU,UAAU,CAACH,IAAI,CAACJ,IAAI,CAACH,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UAClC;UACA,OAAOU,UAAU;QACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB;MACF,CAAC;MAAA;IAAA;IACL,OAAOT,eAAe,CAACT,UAAU,CAAC;EAEtC,CAAC;EAAA,gBA5CKR,aAAa;IAAA;EAAA;AAAA,GA4ClB;AAED,eAAeA,aAAa"},"metadata":{},"sourceType":"module"}